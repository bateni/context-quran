%D \module
%D   [      file=p-quran-text,
%D        version=0.45,
%D          title=\CONTEXT\ User Module,
%D       subtitle=quran-text,
%D         author={Mohammad Hossein Bateni},
%D           date=\currentdate,
%D      copyright={Mohammad Hossein Bateni},
%D        license=GNU General Public License v3]

%C dabeer module for Persian typesetting in ConTeXt
%C Copyright (C) 2015, 2016  Mohammad Hossein Bateni

%C This program is free software; you can redistribute it and/or
%C modify it under the terms of the GNU General Public License
%C as published by the Free Software Foundation; either version 3
%C of the License, or (at your option) any later version.

%C This program is distributed in the hope that it will be useful,
%C but WITHOUT ANY WARRANTY; without even the implied warranty of
%C MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%C GNU General Public License for more details.

%C You should have received a copy of the GNU General Public License
%C along with this program; if not, write to the Free Software
%C Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

%D The \LUA\ code should go to inside a \LUA\ file but let us keep it
%D here for now.  We read the meta data, compute prefix sums, and load
%D all the buffer definitions.

\writestatus{loading}{Loading the QuranText module}

\registerctxluafile{p-quran-text}{1.010}

\definenamespace
        [quran]
        [type=module,
         comment=quran text module,
         version=1,
         name=QuranText,
         parent=quran,
         setup=list,
         command=yes,
         style=yes]

\setupQuranText
        [prefix=quran,
         endofverse=d,  %% a,b,c,d,off
         style=,
         color=,
         before=,
         after=,
         setups=,
         sectioninfo=, %% on,off
         pauseinfo=,   %% on,off
        ]

\unprotect

%D These font features let us remove/modify Quran text.  Some fonts do
%D not support the standard text, or we may not like to have the extra
%D marks.
%% TODO: Add a feature to prepare ``middle hamzah'' for standard Arabic fonts.
\definefontfeature[removewaqfmarks] [goodies=quran-goodies,waqfmarks=yes]
\definefontfeature[removeplacemarks][goodies=quran-goodies,placemarks=yes]

%D This is the main interface to the module. There is an optional
%D argument, which is the name of the QuranText instance.  The following
%D two mandatory arguments are the chapter and verse number,
%D respectively.
\unexpanded\def\ShowVerse{\dosingleempty\doShowVerse}

\def\doShowVerse[#1]#2#3{%
  \edef\currentQuranText{#1}%
  \QuranTextparameter{before}%
  {%
  \useQuranTextstyleandcolor{style}{color}%
  \doif{\QuranTextparameter{pauseinfo}}{off}
        {\addff{removewaqfmarks}}%
  \doif{\QuranTextparameter{sectioninfo}}{off}
        {\addff{removeplacemarks}}%
  \usesetupsparameter\QuranTextparameter%
  \edef\currentQuranTextprefix{\QuranTextparameter{prefix}}%
  \edef\current_quran_chapter{#2}%
  \gdef\continuing_verse{}%
  \processcommalist[#3]\show_single_verse_from_chapter%
  }%
  \QuranTextparameter{after}%
}

\define[1]\show_single_verse_from_chapter{%
  \doifnotempty{#1}
    {\show_single_verse{\current_quran_chapter}{#1}}%
}

\define[2]\show_single_verse{%
  \edef\mybuffername{\currentQuranTextprefix-text:#1:#2}%
  \doifelsebuffer{\mybuffername}
     {}
     {\directlua{moduledata.qurantext.loadversechunk("\currentQuranTextprefix",#1,#2)}}%
  \doif{\continuing_verse}{y}{ }%
  \gdef\continuing_verse{y}%
  \getbuffer[\mybuffername]\qurantextayamarker{#2}%
}

%% TODO: define persiandecimals versions but perhaps numberstyle is better.
%D We next define different styles of marking the end of verses
\define[1]\ayamarker_a{#1}  % as plain as it gets
\define[1]\ayamarker_b{(\arabicdecimals{#1})}  % use parentheses
\define[1]\ayamarker_c{﴿\arabicdecimals{#1}﴾}  % use decorative parentheses
\define[1]\ayamarker_d{۝\arabicdecimals{#1}}   % use end-of-aya marker

\def\qurantextayamarker#1{%
        \edef\endofverseoption{\QuranTextparameter{endofverse}}%
        \writestatus{quran}{\endofverseoption}%
        \ifcsname ayamarker_\endofverseoption\endcsname%
        ~\csname ayamarker_\endofverseoption\endcsname{#1}%
        \else\fi}

\protect


%% TODO: example to come

